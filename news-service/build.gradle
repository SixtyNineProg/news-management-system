plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "io.freefair.lombok" version "8.4"
}

group = 'by.klimov'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 17
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.verbose=true'
    ]
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.5.5.Final'
    springdocOpenapiVersion = '2.3.0'
    apacheLuceneVersion = '9.10.0'
    hibernateSearchVersion = '7.0.0.Final'
    jakartaPersistenceVersion = '3.1.0'
    set('springCloudVersion', "2023.0.0")
    viremockVersion = '3.3.1'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocOpenapiVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocOpenapiVersion}"

    implementation "org.apache.lucene:lucene-core:${apacheLuceneVersion}"
    implementation "org.apache.lucene:lucene-queryparser:${apacheLuceneVersion}"

    implementation "org.hibernate.search:hibernate-search-mapper-orm:${hibernateSearchVersion}"
    implementation "org.hibernate.search:hibernate-search-backend-lucene:${hibernateSearchVersion}"

    implementation "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceVersion}"

    testImplementation "org.wiremock:wiremock-standalone:${viremockVersion}"

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
